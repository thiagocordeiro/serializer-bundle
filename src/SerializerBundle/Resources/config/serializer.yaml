parameters:
  serializer.cache_dir: '%kernel.cache_dir%'
  serializer.check_timestamp: false
  serializer.value_objects: [ ]
  serializer.custom_encoders: [ ]
  serializer.custom_decoders: [ ]
  serializer.encoder_factories: { }
  serializer.decoder_factories: { }
  serializer.file_user: ''
  serializer.file_group: ''

services:
  _defaults:
    autowire: true
    autoconfigure: true
    public: true

  Serializer\EncoderFactory:
    arguments:
      $cacheDir: '%serializer.cache_dir%'
      $checkTimestamp: '%serializer.check_timestamp%'
      $customEncoders: '%serializer.custom_encoders%'
      $factories: '%serializer.encoder_factories%'
      $fileUser: '%serializer.file_user%'
      $fileGroup: '%serializer.file_group%'

  Serializer\DecoderFactory:
    arguments:
      $cacheDir: '%serializer.cache_dir%'
      $checkTimestamp: '%serializer.check_timestamp%'
      $customDecoders: '%serializer.custom_decoders%'
      $factories: '%serializer.decoder_factories%'
      $fileUser: '%serializer.file_user%'
      $fileGroup: '%serializer.file_group%'

  Serializer\ArraySerializer: ~
  Serializer\JsonSerializer: ~
  Serializer\Serializer: '@Serializer\JsonSerializer'

  Serializer\SerializerBundle\DependencyInjection\HttpValueObjectFactory: ~

  # when controller returns a value object, then try to serialize and create a json response
  Serializer\SerializerBundle\EventListener\ResponseSerializer:
    tags:
      - { name: kernel.event_listener, event: kernel.view, priority: 100 }
